-- import: fifthtry.github.io/admint.io/assets
-- import: fifthtry.github.io/admint-cs as cs
-- import: fifthtry.github.io/admint-typography as typo
-- import: fifthtry.github.io/admint.io/header as header
-- import: fifthtry.github.io/admint.io/lib
-- import: fifthtry.github.io/admint.io/functions




-- integer $current-active: 1

-- integer $current-cell: 1

-- lib.page:

-- lib.header:

-- lib.hero: Deliver refreshing Web 3.0 campaigns!
cta-text: Get Started
cta-link: index.html

Build your brand's fan-base in web 3.0 with us!

-- lib.slider:
$active-cell: $current-active

-- lib.slide: WHY ADMINT?
subtitle: Make your brand Web 3.0 ready  via structured campaign phases:
src: $assets.files.static.lezgoo.simple.svg
index: 1
reset: $current-active

-- lib.card: 1

 Reach out to existing audience base via known channels. 


-- lib.card: 2

 Identify & segregate your “web 3.0 ready” audience pool. 


-- lib.card: 3

 Extend real-world benefits & build your metaverse fanbase! 


-- end: lib.slide

-- lib.full-slide: WHY ADMINT?
subtitle: Campaigns are structured to mimic standard known processes:  Planning, Set Up, Execution & Analysis
src: $assets.files.static.lezgoo.structured.svg
index: 2
reset: $current-active


Follow along our guided walkthroughs to sequentially construct
all the necessary components to launch a campaign.


-- lib.mid-slide: WHY ADMINT?
subtitle: NFTs are our key media vehicle to run  campaigns. You can even mint your own! 
src: $assets.files.static.lezgoo.keymedia.svg
index: 3
reset: $current-active


With AdMint you can create your very own custom NFT collection
or use pre-minted NFTs (if yet unsure!) to power your campaigns.


-- lib.four-slide: WHY ADMINT?
subtitle: We help you distribute, validate & track  your NFTs via custom tools & templates. A one-stop ad stack!
src: $assets.files.static.lezgoo.ditribut.svg
index: 4
reset: $current-active


With AdMint you can create your very own custom NFT collection
or use pre-minted NFTs (if yet unsure!) to power your campaigns.

-- lib.last-slide: WHY ADMINT?
subtitle: Analyze & consolidate the strategy that works best for your brand! Run your web 3.0 experiments. 
src: $assets.files.static.lezgoo.analyze.svg
index: 5
reset: $current-active

Watch the numbers. See the plan take shape. Measure that ROI. 
Stake your claim across the Metaverses!

-- end: lib.slider

-- lib.advertising: How advertising in web 3.0 different....
tagline: **ADVERTISING IN WEB 3.0**

-- lib.ad-card: Transparent Yet Private
src: $assets.files.static.advertising.Transparent-Yet-Private.svg

In the decentralized web, there's no room for cookies, device Ids or tracking
individuals. New user data is protected, anonymized, and yet accessible for
all, via simple clicks across blockchain explorers. As a brand, what do you
measure & how?

-- lib.ad-card: New Data is Universal
src: $assets.files.static.advertising.newData.svg

Data no longer sits under one roof, to be used or misused without proper consent
from the individual users. But we do get to see any and all trasactions across
wallets, brand tokens, NFTs & crypto currencies. As a brand, focus on
behavioral traits rather than individuals?

-- lib.ad-card: The target is always moving
src: $assets.files.static.advertising.target-is-always-moving.svg

Your NFTs are transitionary! Here today, there tomorrow. Your high value
customer-base is no longer "male, 22-40, SEC A+" but "wallets on Polygon,
having BAYC NFT, with $500+ liquid crypto holdings". As a brand, how do you get
them to use your NFTs?

-- lib.ad-card: Everyone is everywhere
src: $assets.files.static.advertising.everyone-is-everywhere.svg

Metaverse and other web 3.0 destinations are global. You no longer have
audiences restricted to local & hyperlocal cohorts. Your brand now caters to a
slew of anonymized wallets across global platforms. As a brand, how will you
use your regional web 3.0 budget?

-- end: lib.advertising


-- lib.how-it-works: HOW IT WORKS
subtitle: Web 3.0 campaigns  set up made simple.

AdMint offsets most of the technological challenges associated with Web 3.0, allowing advertisers to focus on strategy & campaign execution

-- lib.slider:
$active-cell: $current-cell

-- lib.works-cell: PLANNING
number: 1
right-src: $assets.files.static.lezgoo.planning-right-img.svg 
left-src: $assets.files.static.lezgoo.planning-left-img.svg
top-cell: You choose your brand’s campaign objective 
bottom-cell: AdMint provides relevant web 3.0 context on the campaign execution.
index: 1
reset: $current-cell

-- lib.works-cell: FUNDS
number: 2
left-src: $assets.files.static.lezgoo.fund-left-img.svg 
right-src: $assets.files.static.lezgoo.fund-right-img.svg
top-cell: You set up funds via standard payment options 
bottom-cell: AdMint handles your crypto wallets & transfers 
index: 2
reset: $current-cell

-- lib.works-cell: NFTs
number: 3
left-src: $assets.files.static.lezgoo.nft-left-img.svg 
right-src: $assets.files.static.lezgoo.nft-right-img.svg
top-cell: You provide us creatives to run the campaign
bottom-cell: AdMint preps & converts them into NFT collections
index: 3
reset: $current-cell

-- lib.works-cell: DISTRIBUTION
number: 4
left-src: $assets.files.static.lezgoo.dist-left-img.svg 
right-src: $assets.files.static.lezgoo.dist-right-img.svg
top-cell: You identify target audience to receive the NFTs
bottom-cell: AdMint provides tools and templates to enable distribution. execution.
index: 4
reset: $current-cell

-- lib.works-cell: UTILITY
number: 5
left-src: $assets.files.static.lezgoo.utility-left-img.svg 
right-src: $assets.files.static.lezgoo.utility-right-img.svg
top-cell: You determine the real world value offering to consumers
bottom-cell: AdMint helps validate NFT ownership & extends access 
index: 5
reset: $current-cell

-- end: lib.slider

-- end: lib.how-it-works

-- end: lib.page








-- component page:
children wrap:
ftd.type-data types: $typo.types
ftd.color-scheme colors: $cs.main

-- ftd.column:
children: $page.wrap
width: fill-container
$on-mouse-enter$: $functions.globalEvent()


-- end: ftd.column

-- end: page



-- integer $current-active: 1

-- integer min: 1

-- integer max: 6

-- component card:
caption integer title:
body body:

-- ftd.column:
background.solid: $inherited.colors.background.step-2
border-color: $inherited.colors.cta-primary.base
border-width.px: 1
border-top-right-radius.px: 20
border-bottom-left-radius.px: 20
border-bottom-right-radius.px: 20
padding-top.px: 43
padding-bottom.px: 54
padding-horizontal.px: 47



-- ftd.text: 
text: $card.body
color: $inherited.colors.text
role: $inherited.types.copy-large
margin-bottom.px: 60

-- ftd.column:
width: fill-container
height.fixed.px: 13
background.solid: $inherited.colors.custom.three
align-content: center

-- ftd.integer: $card.title
role: $inherited.types.heading-tiny
color: $inherited.colors.background.step-1
border-radius.percent: 100
padding-vertical.px: 14
padding-horizontal.px: 28
background.solid: $inherited.colors.cta-primary.base

-- end: ftd.column

-- end: ftd.column


-- end: card

-- component slide:
caption title:
string subtitle:
optional body body:
ftd.image-src src:
children slide-wrap:
optional integer index:
optional integer reset:

-- ftd.column:
if: { slide.index == slide.reset }



-- ftd.row:
width: fill-container

-- ftd.column:
width: fill-container
height: fill-container

-- ftd.text: $slide.title
role: $inherited.types.copy-regular
color: $inherited.colors.text
margin-bottom.px: 41

-- ftd.text: $slide.subtitle
role: $inherited.types.heading-medium
color: $inherited.colors.text
margin-bottom.px: 87
region: h3


-- ftd.text:
if: {slide.body != NULL}
text: $slide.body
role: $inherited.types.copy-regular
color: $inherited.colors.text
margin-bottom.px: 41



-- end: ftd.column

-- ftd.column:
align-content: center
align-self: center

-- ftd.image:
src: $slide.src
align-self: center

-- end: ftd.column

-- end: ftd.row

-- ftd.row:
width: fill-container
children: $slide.slide-wrap
spacing.fixed.px: 24

-- end: ftd.row

-- end: ftd.column

-- end: slide



-- component slider:
children wrap:

-- ftd.row:
width: fill-container
padding-horizontal.px: 12
align-content: center

-- ftd.row:
width: fill-container
spacing.fixed.px: 24
padding-vertical.px: 40
padding-horizontal.px: 12
max-width.fixed.px: 1320
align-self: center

-- ftd.image:
if: {current-active != 1}
src: $assets.files.static.lezgoo.right.svg
$on-click$: $functions.decclamp($a = $current-active, by = 1, min = $min, max = $max)
align-self: center
border-radius.px: 100
width.fixed.px: 40
height.fixed.px: 40
background.solid: $inherited.colors.cta-primary.base
anchor: parent
left.px: -78

-- ftd.image:
if: {current-active == 1}
src: $assets.files.static.lezgoo.right.svg
align-self: center
border-radius.px: 100
width.fixed.px: 40
height.fixed.px: 40
background.solid: $inherited.colors.custom.three
anchor: parent
left.px: -78

-- ftd.row:
children: $slider.wrap
width: fill-container
padding-horizontal.px: 12

-- end: ftd.row

-- ftd.image:
if: {current-active != 5}
src: $assets.files.static.lezgoo.left.svg
$on-click$: $functions.clamp($a = $current-active, by = 1, min = $min, max = $max)
align-self: center
border-radius.px: 100
width.fixed.px: 40
height.fixed.px: 40
background.solid: $inherited.colors.cta-primary.base
right.px: -74
anchor: parent

-- ftd.image:
if: {current-active == 5}
src: $assets.files.static.lezgoo.left.svg
align-self: center
border-radius.px: 100
width.fixed.px: 40
height.fixed.px: 40
background.solid: $inherited.colors.custom.three
anchor: parent
right.px: -74


-- end: ftd.row


-- end: ftd.row

-- end: slider








-- component slide:
caption title:
string subtitle:
optional body body:
ftd.image-src src:
children slide-wrap:
optional integer index:
optional integer reset:

-- ftd.column:
if: { slide.index == slide.reset }

-- ftd.row:
width: fill-container

-- ftd.column:
width: fill-container
height: fill-container

-- ftd.text: $slide.title
role: $inherited.types.copy-regular
color: $inherited.colors.text
margin-bottom.px: 41

-- ftd.text: $slide.subtitle
role: $inherited.types.heading-medium
color: $inherited.colors.text
margin-bottom.px: 87
region: h3
width.fixed.px: 650


-- ftd.text:
if: {slide.body != NULL}
text: $slide.body
role: $inherited.types.copy-large
color: $inherited.colors.text
margin-bottom.px: 41


-- end: ftd.column

-- ftd.column:
align-content: center
align-self: center

-- ftd.image:
src: $slide.src
align-self: center

-- end: ftd.column

-- end: ftd.row

-- ftd.row:
width: fill-container
children: $slide.slide-wrap
spacing.fixed.px: 24

-- end: ftd.row

-- end: ftd.column

-- end: slide





-- component full-slide:
caption title:
string subtitle:
optional body body:
ftd.image-src src:
children full-slide-wrap:
optional integer index:
optional integer reset:

-- ftd.column:
if: { full-slide.index == full-slide.reset }
height.fixed.px: 650


-- ftd.row:
width: fill-container

-- ftd.column:
width: fill-container
height: fill-container

-- ftd.text: $full-slide.title
role: $inherited.types.copy-regular
color: $inherited.colors.text
margin-bottom.px: 41

-- ftd.text: $full-slide.subtitle
role: $inherited.types.heading-medium
color: $inherited.colors.text
margin-bottom.px: 87
region: h3


-- ftd.text:
if: {full-slide.body != NULL}
text: $full-slide.body
role: $inherited.types.copy-large
color: $inherited.colors.text
margin-bottom.px: 41
max-width.fixed.px: 750

-- end: ftd.column

-- ftd.column:
align-content: center
align-self: center
anchor: parent 
right.px:0
top.px: 220
z-index: -1 

-- ftd.image:
src: $full-slide.src
align-self: center

-- end: ftd.column

-- end: ftd.row

-- ftd.row:
width: fill-container
children: $full-slide.full-slide-wrap
spacing.fixed.px: 24

-- end: ftd.row

-- end: ftd.column

-- end: full-slide





-- component mid-slide:
caption title:
string subtitle:
optional body body:
ftd.image-src src:
children mid-slide-wrap:
optional integer index:
optional integer reset:

-- ftd.column:
if: { mid-slide.index == mid-slide.reset }
height.fixed.px: 650
width: fill-container



-- ftd.row:
width: fill-container

-- ftd.column:
width: fill-container
height: fill-container

-- ftd.text: $mid-slide.title
role: $inherited.types.copy-regular
color: $inherited.colors.text
margin-bottom.px: 28
max-width.fixed.percent: 70
width: fill-container

-- ftd.text: $mid-slide.subtitle
role: $inherited.types.heading-medium
color: $inherited.colors.text
margin-bottom.px: 20
region: h3
width: fill-container
max-width.fixed.percent: 70

-- ftd.text:
if: {mid-slide.body != NULL}
text: $mid-slide.body
role: $inherited.types.copy-large
color: $inherited.colors.text
margin-bottom.px: 41
max-width.fixed.percent: 70

-- end: ftd.column

-- ftd.column:
align-content: center
align-self: center
anchor: parent 
right.px:0
top.px: 220
z-index: -1 

-- ftd.image:
src: $mid-slide.src
align-self: center

-- end: ftd.column

-- end: ftd.row

-- ftd.row:
width: fill-container
children: $mid-slide.mid-slide-wrap
spacing.fixed.px: 24

-- end: ftd.row

-- end: ftd.column

-- end: mid-slide




-- component four-slide:
caption title:
string subtitle:
optional body body:
ftd.image-src src:
children four-slide-wrap:
optional integer index:
optional integer reset:

-- ftd.column:
if: { four-slide.index == four-slide.reset }
height.fixed.px: 650
width: fill-container

-- ftd.row:
width: fill-container

-- ftd.column:
width: fill-container
height: fill-container

-- ftd.text: $four-slide.title
role: $inherited.types.copy-regular
color: $inherited.colors.text
margin-bottom.px: 41
width: fill-container

-- ftd.text: $four-slide.subtitle
role: $inherited.types.heading-medium
color: $inherited.colors.text
margin-bottom.px: 24
region: h3
width: fill-container


-- ftd.text:
if: {four-slide.body != NULL}
text: $four-slide.body
role: $inherited.types.copy-large
color: $inherited.colors.text
margin-bottom.px: 41
max-width.fixed.percent: 70

-- end: ftd.column

-- ftd.column:
align-content: center
align-self: center
anchor: parent 
right.px:0
top.px: 220
z-index: -1 

-- ftd.image:
src: $four-slide.src
align-self: center

-- end: ftd.column

-- end: ftd.row

-- ftd.row:
width: fill-container
children: $four-slide.four-slide-wrap
spacing.fixed.px: 24

-- end: ftd.row

-- end: ftd.column

-- end: four-slide









-- component last-slide:
caption title:
string subtitle:
optional body body:
ftd.image-src src:
children last-slide-wrap:
optional integer index:
optional integer reset:

-- ftd.column:
if: { last-slide.index == last-slide.reset }
height.fixed.px: 650
width: fill-container


-- ftd.row:
width: fill-container

-- ftd.column:
width: fill-container
height: fill-container

-- ftd.text: $last-slide.title
role: $inherited.types.copy-regular
color: $inherited.colors.text
margin-bottom.px: 41
max-width.fixed.percent: 75
width: fill-container

-- ftd.text: $last-slide.subtitle
role: $inherited.types.heading-medium
color: $inherited.colors.text
margin-bottom.px: 28
region: h3
width: fill-container
max-width.fixed.percent: 75

-- ftd.text:
if: {last-slide.body != NULL}
text: $last-slide.body
role: $inherited.types.copy-large
color: $inherited.colors.text
margin-bottom.px: 41
max-width.fixed.percent: 70

-- end: ftd.column

-- ftd.column:
align-content: center
align-self: center
anchor: parent 
right.px:0
top.px: 220
z-index: -1 

-- ftd.image:
src: $last-slide.src
align-self: center

-- end: ftd.column

-- end: ftd.row

-- ftd.row:
width: fill-container
children: $last-slide.last-slide-wrap
spacing.fixed.px: 24

-- end: ftd.row

-- end: ftd.column

-- end: last-slide