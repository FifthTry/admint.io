-- import: fifthtry.github.io/admint.io/assets
-- import: fifthtry.github.io/doc-site as ds
-- import: fifthtry.github.io/admint.io/docs
-- import: fifthtry.github.io/admint.io/lib
-- import: fifthtry.github.io/admint-cs as cs
-- import: fifthtry.github.io/admint-typography as typo





-- ds.page: How it works
show-footer: true
site-logo: $assets.files.static.admint-logo.svg
colors: $cs.main
types: $typo.types
$widthfill: true
sections: $lib.sitemap.sections

-- ds.page.footer:

-- docs.footer:

-- end: ds.page.footer

-- ds.page.body:

We have developed the `how-it-works` component for [admint.io](https://admint.io/), 
which matches the design currently displayed on the live site.

-- ds.h3: How to use?

The `how-it-works` component accepts `ftd` `child` components also. Check [How it
works](index.html#how-it-works) of homepage. It have `carousel` as child and
`carousel` items as children. It can be used to add any other components as its
children. We recommend to close it with `-- end: how-it-works`, if it contains
multiple childrens.

To use the `how-it-works` component you need to import `lib.ftd` inside your `.ftd`
file, as shown below:

-- ds.code:
lang: ftd

\-- import: fifthtry.github.io/admint.io/lib

-- ds.markdown:

Once you import the `lib` inside your `.ftd` file, use the `how-it-works` component by
adding all required attributes of it.

-- ds.rendered: `how-it-works` without children

-- ds.rendered.input:

\-- lib.how-it-works: **HOW IT WORKS** ðŸš§
subtitle: Web 3.0 campaigns  set up made simple.

AdMint offsets most of the technological challenges 
associated with Web 3.0, allowing advertisers to focus 
on strategy & campaign execution

-- ds.rendered.output:

-- lib.how-it-works: **HOW IT WORKS** ðŸš§
subtitle: Web 3.0 campaigns  set up made simple.

AdMint offsets most of the technological challenges 
associated with Web 3.0, allowing advertisers to focus 
on strategy & campaign execution

-- end: ds.rendered.output

-- end: ds.rendered

-- ds.rendered: `how-it-works` with children

-- ds.rendered.input:

\-- lib.how-it-works: **HOW IT WORKS** ðŸš§
subtitle: Web 3.0 campaigns  set up made simple.

AdMint offsets most of the technological challenges 
associated with Web 3.0, allowing advertisers to focus 
on strategy & campaign execution

\-- lib.works-cell: PLANNING
number: 1
right-src: $assets.files.static.carousel.planning-right-img.svg 
left-src: $assets.files.static.carousel.planning-left-img.svg
right-mob-src: $assets.files.static.carousel.planning-right-mob-new.svg
left-mob-src: $assets.files.static.carousel.planning-left-mob.svg
top-cell: You choose your brandâ€™s campaign objective 
bottom-cell: AdMint provides relevant web 3.0 context on the campaign execution.
index: 1
reset: 1

-- ds.rendered.output:

-- lib.how-it-works: **HOW IT WORKS** ðŸš§
subtitle: Web 3.0 campaigns  set up made simple.

AdMint offsets most of the technological challenges 
associated with Web 3.0, allowing advertisers to focus 
on strategy & campaign execution

-- lib.works-cell: PLANNING
number: 1
right-src: $assets.files.static.carousel.planning-right-img.svg 
left-src: $assets.files.static.carousel.planning-left-img.svg
right-mob-src: $assets.files.static.carousel.planning-right-mob-new.svg
left-mob-src: $assets.files.static.carousel.planning-left-mob.svg
top-cell: You choose your brandâ€™s campaign objective 
bottom-cell: AdMint provides relevant web 3.0 context on the campaign execution.
index: 1
reset: 1

-- end: ds.rendered.output

-- end: ds.rendered

-- end: ds.page
